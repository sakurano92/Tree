using System;
using System.Collections.Generic;
//using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;

public partial class Modules_Inventory_InventoryItemDetail : System.Web.UI.UserControl
{
    public delegate void SaveEventHandler(object sender, EventArgs e);
    public event SaveEventHandler SaveEvent;


    DataManagement dm = new DataManagement();
    InventoryMgr invMgr = new InventoryMgr();

    public string _UserID
    {
        get { return SessionValues.UserIdSession; }
    }
    public string _CurrDate
    {
        get { return DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss"); }
    }
    public string _ItemId
    {
        get { return hdnItemId.Value; }
        set { hdnItemId.Value = value; LoadItemDetailsByID(); }
    }
    public string _ItemCode
    {
        get { return txtItemCode.Text; }
        set { txtItemCode.Text = value; }
    }
    public string _ItemName
    {
        get { return txtItemName.Text; }
        set { txtItemName.Text = value; }
    }
    public string _ItemDesc
    {
        get { return txtDescription.Text; }
        set { txtDescription.Text = value; }
    }
    public string _ItemCategory
    {
        get { return ddlItemCategory.SelectedValue; }
        set
        {
            if (value == string.Empty)
                ddlItemCategory.SelectedIndex = -1;
            else
                ddlItemCategory.SelectedValue = value;
        }
    }
    public string _ItemUnit
    {
        get { return ddlUnit.SelectedValue; }
        set
        {
            if (value == string.Empty || value == "0")
                ddlUnit.SelectedIndex = -1;
            else
                ddlUnit.SelectedValue = value;
        }
    }

    public string _CostPrice
    {
        get { return txtCostPrice.Text; }
        set { txtCostPrice.Text = value; }
    }
    public string _MinStock
    {
        get { return txtMinStock.Text; }
        set { txtMinStock.Text = value; }
    }
    protected void Page_Load(object sender, EventArgs e)
    {
        if (IsPostBack) return;

        if (Request.QueryString["itemid"] != null)
            _ItemId = Request.QueryString["itemid"];

        LoadInitialData();
        txtItemCode.Focus();
    }

    protected void LoadInitialData()
    {
        dm.LoadDDL(ddlUnit, "bs_units", "unit_id", "unit_name", true, "");
        dm.LoadDDL(ddlItemCategory, "bs_item_categories", "itm_cat_id", "itm_cat_name", false, "");
    }

    protected void ClearForm()
    {
        _ItemId = string.Empty;
        _ItemCode = string.Empty;
        _ItemName = string.Empty;
        _ItemDesc = string.Empty;
        _ItemCategory = string.Empty;
        _ItemUnit = string.Empty;
        _CostPrice = "0.00";
        _MinStock = string.Empty;

        txtItemCode.Focus();
    }


    protected bool Save()
    {
        if (!ItemCodeExists())
        {
            if (_ItemId == string.Empty)
            {
                invMgr.SaveInventoryDetails(_ItemCode, _ItemName, _ItemDesc, _ItemCategory, _ItemUnit, string.Empty, _CostPrice, _MinStock, SessionValues.UserIdSession);
            }
            else
            {
                invMgr.UpdateInventoryDetails(_ItemId, _ItemCode, _ItemName, _ItemDesc, _ItemCategory, _ItemUnit, string.Empty, _CostPrice, _MinStock, SessionValues.UserIdSession);
            }
            return true;
        }
        return false;
    }

    protected virtual void btn_OnClick(object sender, EventArgs e)
    {
        Button cmdBtn = (Button)sender;

        switch (cmdBtn.CommandName)
        {
            case "cancel":
                ClearForm();
                break;
            case "save":
                if (Save())
                    ClearForm();
                if (SaveEvent != null)
                    SaveEvent(this, null);
                break;
            default:
                break;
        }
    }

    protected void LoadItemDetailsByID()
    {
        string query = @"SELECT item_id,item_code,item_name,item_desc,item_category,bs_inventory_items.unit_id
                          ,vendor_id,cost_price,min_stock,last_bal,created_by,created_date
                          ,modified_by,modified_date,bs_units.unit_name
                          FROM bs_inventory_items LEFT JOIN bs_units ON
                          bs_inventory_items.unit_id = bs_units.unit_id WHERE item_id = '" + _ItemId + "'";
        DataTable dt = dm.GetData(query);
        if (dt.Rows.Count > 0)
        {
            DataRow dr = dt.Rows[0];
            _ItemCode = dr["item_code"].ToString();
            _ItemName = dr["item_name"].ToString();
            _ItemDesc = dr["item_desc"].ToString();
            _ItemCategory = dr["item_category"].ToString();
            _ItemUnit = dr["unit_id"].ToString();
            _CostPrice = dr["cost_price"].ToString();
            _MinStock = dr["min_stock"].ToString();

        }
    }

    private bool ItemCodeExists()
    {
        string query = @"SELECT item_id from bs_inventory_items WHERE item_code = '" + _ItemCode + "'";
        if (_ItemId != "")
        {
            query += " and item_id!='" + _ItemId + "'";
        }
        DataTable dt = dm.GetData(query);
        if (dt.Rows.Count > 0)
        {
            CustomMessage.DisplayMessage(this.Page, "Item Code Already Exists.", CustomMessage.MessageType.WARNING);
            txtItemCode.Focus();
            return true;
        }
        else
        {
            return false;
        }
    }
}